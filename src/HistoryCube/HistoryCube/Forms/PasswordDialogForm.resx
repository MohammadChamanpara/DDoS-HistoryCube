<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAAAAEAIACoEAAAJgAAABAQAAABACAAaAQAAM4QAAAoAAAAIAAAAEAAAAABACAAAAAAAIAQ
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACwAAACIAAAAtAAAALQAA
        AC0AAAAtAAAALQAAAC0AAAAtAAAALQAAAC0AAAAtAAAALQAAAC0AAAAtAAAALQAAAC0AAAAtAAAALQAA
        AC0AAAAtAAAAIgAAAAsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACIiX3eiYp++YmK
        ffiIiXz2h4h89YeIe/SGh3rzhod68oaHevKGh3ryhod68oaHevKGh3ryhod68oaHevKGh3ryhod684eI
        e/SHiHz1iIl89omKffiJin75iIl93gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIuM
        f/uxsqb/wMK0/9HSxf/X2Mz/1tfJ/93e0P/g4dP/4eLV/+Hi1P/d3tH/2tvO/93e0f/h4tT/4eLV/+Dh
        0//d3tD/1tfJ/9fYzP/R0sX/wMK0/7Gypv+LjH/7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAi42A+6ipnP+ys6f/x8i8/9jZzv/Jy73/ysu9/8zNwP/NzsD/0tPF/8jJu//AwbT/yMm7/9LT
        xf/NzsD/zM3A/8rLvf/Jy73/2NnO/8fIvP+ys6f/qKmc/4uNgPsAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAARNEL/GRkX/y4uK/+Kq7L/m9fp/2PG6P9stc3/WVpU/1tbVf+EtL//H7r6/wCy
        /f9brsr/cHBp/1tbVf9xqbn/OMH3/2PG6P+wz9T/fH53/y0tKv8pWWv/AENf/wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsLCf8REQ//PXGD/3XB2/+r2+b/mMXN/1hYUv9TVE7/ZZ+x/1HI
        9P8YuPr/PZu//zo7N/9qa2T/ZZ+x/zbA9/87wvb/l8TM/7S2rP+EhH3/Om1+/wBZfv8AQ1//AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEREQ/h9BTv8Hc6D/csTg/7nV1v+TlIr/XF1X/3ut
        uv86wvb/WMrz/12xzf83NzP/SEhD/4i1v/86wvb/RcT1/2+4z/+TlIr/s7Oq/5CvtP8Hc6D/AFl+/xpS
        Z/4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaP0z+AHuv/wJwn/+Hrrf/tbes/5ye
        k/9zpbL/Yczy/0zG9P+GwdD/SElE/zAxLf9fmav/ZM3y/0zG9P+EwND/YWFa/5yek/+80Mz/cbjQ/wJw
        n/8iYnv/Dg4N/gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABfh/8AcKD/M3yZ/3x9
        dv+5urH/r8nJ/4LV7v9uz/H/fsDT/3V2bv9DQz//TpKp/xy6+v9ZyvP/fsDT/4aHfv+Wl43/r8nI/6/b
        5P9sts//MXeS/xYWFP8ODg3+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkZKG+6ip
        nP+wsaX/0NHD/+Hi1f/d39D/2tzN/9XWyP/P0ML/ztDC/8PEt//AwbT/w8S3/87Qwv/P0ML/1dbI/9rc
        zf/d39D/4eLV/9DRw/+wsaX/qKmc/5GShvsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACSk4f7srOm/7u8sP/X2cv/5ujb/+Xm1//k5df/4uPV/+Dh0//e4NL/29zP/9rbzv/b3M//3uDS/+Dh
        0//i49X/5OXX/+Xm1//m6Nv/19nL/7u8sP+ys6b/kpOH+wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAJOUiPuoqZz/sLGl/83OwP/j5dj/3d7P/9bXyf/Nz8H/yMm7/8XGuf/Cw7X/wMG0/8LD
        tf/Fxrn/yMm7/83Pwf/W18n/3d7P/+Pl2P/NzsD/sLGl/6ipnP+TlIj7AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAlJWJ+7Kzpv+7vLD/1dfJ/+jq3//l5tf/4uPV/9/h0//d3tD/29zP/9vc
        zv/a287/29zO/9vcz//d3tD/3+HT/+Lj1f/l5tf/6Orf/9XXyf+7vLD/srOm/5SVifsAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACVlor7qKmc/7Cxpf/LzL7/4+TY/9vdzv/U1cf/ysu9/8TF
        uP/Cw7b/wcK1/8DBtP/BwrX/wsO2/8TFuP/Ky73/1NXH/9vdzv/j5Nj/y8y+/7Cxpf+oqZz/lZaK+wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJaXivuys6b/u7yw/9PUxv/n6N3/4ePU/+Dh
        0//e39L/29zP/9vcz//a287/2tvO/9rbzv/b3M//29zP/97f0v/g4dP/4ePU/+fo3f/T1Mb/u7yw/7Kz
        pv+Wl4r7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAl5iL+6ipnP+vsKT/xsi6/9ze
        0f/U1cf/0NHD/8jJu//BwrX/wcK1/8DBtP/AwbT/wMG0/8HCtf/BwrX/yMm7/9DRw//U1cf/3N7R/8bI
        uv+vsKT/qKmc/5eYi/sAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACXmYz7tLao/7/A
        s//R0sX/3+DU/9/g0v/g4dP/4uTV/+Lj1f/i49X/4uPV/+Lj1f/i49X/4uPV/+Lj1f/i5NX/4OHT/9/g
        0v/f4NT/0dLF/7/As/+0tqj/l5mM+wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJeZ
        jPu4uqz/ycq9/+Lk2v/r7OT/8/Tu//7+/f/+/v3//v79//7+/f/+/v3//v79//7+/f/+/v3//v79//7+
        /f/9/vz/+vv4//j49f/4+ff/xca4/7i6rP+XmYz7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAlJWJ2ZyekfuhopX+p6mc/6mqnf+srqD5sLKk87K0pvKytKbysrSm8rK0pvKytKbysrSm8rK0
        pvKytKbysrSm8rCypPOsrqD5qaqd/6epnP+hopX+nJ6R+5SVidkAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
</value>
  </data>
</root>